### Courses Endpoints Tests

@baseUrl = http://localhost:3000
@coursesUrl = {{baseUrl}}/courses

### Note: These endpoints require authentication
### First login to get access token, then use it in Authorization header

### 1. Create a new course (requires INSTRUCTOR or ADMIN role)
POST {{coursesUrl}}
Authorization: Bearer your-access-token-here
Content-Type: application/json

{
  "title": "Introduction to Web Development",
  "description": "Learn the basics of HTML, CSS, and JavaScript",
  "price": 99.99,
  "category": "Programming",
  "level": "BEGINNER",
  "duration": 20,
  "thumbnail": "https://example.com/thumbnail.jpg"
}

### 2. Create another course
POST {{coursesUrl}}
Authorization: Bearer your-access-token-here
Content-Type: application/json

{
  "title": "Advanced React Development",
  "description": "Master React hooks, context, and advanced patterns",
  "price": 149.99,
  "category": "Programming",
  "level": "ADVANCED",
  "duration": 30,
  "thumbnail": "https://example.com/react-thumbnail.jpg"
}

### 3. Get all courses
GET {{coursesUrl}}

### 4. Get course by ID (replace with actual course ID)
GET {{coursesUrl}}/course-id-here

### 5. Update course
PATCH {{coursesUrl}}/course-id-here
Authorization: Bearer your-access-token-here
Content-Type: application/json

{
  "title": "Updated Course Title",
  "description": "Updated course description",
  "price": 129.99
}

### 6. Delete course
DELETE {{coursesUrl}}/course-id-here
Authorization: Bearer your-access-token-here

### 7. Get non-existent course
GET {{coursesUrl}}/non-existent-id

### 8. Create course with invalid data
POST {{coursesUrl}}
Authorization: Bearer your-access-token-here
Content-Type: application/json

{
  "title": "",
  "description": "Invalid course",
  "price": -10
} 